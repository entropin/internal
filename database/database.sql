-- MySQL Script generated by MySQL Workbench
-- Tue 30 Jun 2015 02:27:55 PM CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema internal
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema internal
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `internal` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `internal` ;

-- -----------------------------------------------------
-- Table `internal`.`groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `internal`.`groups` (
  `group_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `description` VARCHAR(64) NULL DEFAULT NULL,
  PRIMARY KEY (`group_id`),
  UNIQUE INDEX `name` (`name` ASC));


-- -----------------------------------------------------
-- Table `internal`.`members`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `internal`.`members` (
  `member_id` INT(11) NOT NULL AUTO_INCREMENT,
  `created` DATETIME NOT NULL,
  `updated` DATETIME NULL DEFAULT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NULL DEFAULT NULL,
  `reset_token` CHAR(34) NULL DEFAULT NULL,
  `reset_expire` INT(11) NULL DEFAULT NULL,
  `firstname` VARCHAR(255) NULL DEFAULT NULL,
  `lastname` VARCHAR(255) NULL DEFAULT NULL,
  `civicregno` CHAR(13) NULL DEFAULT NULL,
  `company` VARCHAR(255) NULL DEFAULT NULL,
  `orgno` VARCHAR(12) NULL DEFAULT NULL,
  `address` VARCHAR(255) NULL DEFAULT NULL,
  `address2` VARCHAR(255) NULL DEFAULT NULL,
  `zipcode` INT(11) NULL DEFAULT NULL,
  `city` VARCHAR(64) NULL DEFAULT NULL,
  `country` CHAR(2) NULL DEFAULT 'SE',
  `phone` VARCHAR(64) NULL DEFAULT NULL,
  PRIMARY KEY (`member_id`),
  UNIQUE INDEX `email` (`email` ASC));


-- -----------------------------------------------------
-- Table `internal`.`member_group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `internal`.`member_group` (
  `member_id` INT(11) NOT NULL,
  `group_id` INT(11) NOT NULL,
  INDEX `member_groups` (`member_id` ASC, `group_id` ASC),
  INDEX `group_id` (`group_id` ASC),
  CONSTRAINT `member_groups_ibfk_2`
    FOREIGN KEY (`member_id`)
    REFERENCES `internal`.`members` (`member_id`),
  CONSTRAINT `member_groups_ibfk_1`
    FOREIGN KEY (`group_id`)
    REFERENCES `internal`.`groups` (`group_id`));


-- -----------------------------------------------------
-- Table `internal`.`member_rfid`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `internal`.`member_rfid` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `created` DATETIME NOT NULL COMMENT 'Timestamp',
  `updated` DATETIME NOT NULL,
  `member_id` INT(11) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `tagid` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`, `created`),
  UNIQUE INDEX `tagid` (`tagid` ASC),
  INDEX `member_id` (`member_id` ASC),
  CONSTRAINT `member_rfid_ibfk_1`
    FOREIGN KEY (`member_id`)
    REFERENCES `internal`.`members` (`member_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT);


-- -----------------------------------------------------
-- Table `internal`.`member_ssh`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `internal`.`member_ssh` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `member_id` INT(11) NOT NULL,
  `pubkey` TEXT NOT NULL,
  `active` TINYINT(4) NOT NULL,
  `added` INT(11) NOT NULL COMMENT 'Timestamp',
  `last_modified` TINYINT(4) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `member_id` (`member_id` ASC),
  CONSTRAINT `member_ssh_ibfk_1`
    FOREIGN KEY (`member_id`)
    REFERENCES `internal`.`members` (`member_id`));


-- -----------------------------------------------------
-- Table `internal`.`config`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `internal`.`config` (
  `key` VARCHAR(64) NOT NULL COMMENT 'Config key-name',
  `value` VARCHAR(2048) NULL DEFAULT NULL,
  `desc` VARCHAR(255) NULL DEFAULT NULL COMMENT 'Optional description of config',
  PRIMARY KEY (`key`));


-- -----------------------------------------------------
-- Table `internal`.`logins`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `internal`.`logins` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `member_id` INT(11) NULL DEFAULT NULL,
  `ip_address` VARCHAR(64) NOT NULL,
  `timestamp` INT(11) NOT NULL,
  `valid` TINYINT(4) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  INDEX `user_id` (`member_id` ASC));


-- -----------------------------------------------------
-- Table `internal`.`transactions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `internal`.`transactions` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `created` DATETIME NOT NULL,
  `updated` DATETIME NOT NULL,
  `type` VARCHAR(64) NOT NULL,
  `amount` DECIMAL(10,4) NOT NULL,
  `external_id` VARCHAR(255) NOT NULL,
  `external_date` DATETIME NULL,
  `external_text` TEXT NULL,
  `data` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `internal`.`transaction_member`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `internal`.`transaction_member` (
  `member_id` INT(11) NOT NULL,
  `transaction_id` INT(11) NOT NULL,
  PRIMARY KEY (`member_id`),
  INDEX `fk_transaction_member_2_idx` (`transaction_id` ASC),
  CONSTRAINT `fk_transaction_member_1`
    FOREIGN KEY (`member_id`)
    REFERENCES `internal`.`members` (`member_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaction_member_2`
    FOREIGN KEY (`transaction_id`)
    REFERENCES `internal`.`transactions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`transaction_accounting`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `internal`.`transaction_accounting` (
  `transaction_id` INT(11) NOT NULL,
  `acccounting_id` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`transaction_id`),
  CONSTRAINT `fk_transaction_accounting_1`
    FOREIGN KEY (`transaction_id`)
    REFERENCES `internal`.`transactions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`labaccess`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `internal`.`labaccess` (
  `id` VARCHAR(45) NULL,
  `member_id` INT(11) NOT NULL,
  `created` DATETIME NULL,
  `updated` DATETIME NULL,
  `date_start` DATETIME NULL,
  `date_end` DATETIME NULL,
  PRIMARY KEY (`member_id`),
  CONSTRAINT `fk_labaccess_1`
    FOREIGN KEY (`member_id`)
    REFERENCES `internal`.`members` (`member_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `internal`.`transaction_labaccess`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `internal`.`transaction_labaccess` (
  `labaccess_id` INT(11) NOT NULL,
  `transaction_id` INT(11) NOT NULL,
  PRIMARY KEY (`labaccess_id`, `transaction_id`),
  INDEX `fk_labaccess_transaction_2_idx` (`transaction_id` ASC),
  CONSTRAINT `fk_labaccess_transaction_1`
    FOREIGN KEY (`labaccess_id`)
    REFERENCES `internal`.`labaccess` (`member_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_labaccess_transaction_2`
    FOREIGN KEY (`transaction_id`)
    REFERENCES `internal`.`transactions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
